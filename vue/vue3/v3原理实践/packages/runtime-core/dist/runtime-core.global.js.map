{
  "version": 3,
  "sources": ["../src/index.ts", "../src/renderer.ts", "../../shared/src/index.ts", "../src/vnode.ts", "../src/h.ts"],
  "sourcesContent": ["export { createRenderer } from \"./renderer\"\nexport { h } from \"./h\"", "\n\nexport function createRenderer(renderOptions: any) {\n  const {\n    hostInsert,\n    hostRemove,\n    hostSetElementText,\n    hostSetText,\n    hostCreateElement,\n    patchProp\n  } = renderOptions\n  /**\n   * \u6302\u8F7D\u8282\u70B9\n   * @param newVnode \n   * @param container \n   * \u5904\u7406\u8282\u70B9\u7684props\u5C5E\u6027,\u9700\u8981\u8BB2props\u5C5E\u6027\u521B\u5EFA\u4E0A\u53BB\n   */\n  const mountElement = (newVnode: any, container: any) => {\n    const el = hostCreateElement(container);\n    if (typeof newVnode.children == \"string\") {\n      hostSetElementText(newVnode.children, el)\n    } else if (Array.isArray(newVnode.children)) {\n\n    };\n    if (newVnode.props) {\n      for (const key in newVnode.props) {\n        patchProp(el, null, newVnode.props)\n      }\n    }\n    hostInsert(el, container)\n  }\n\n  const patch = (oldVnode: any, newVnode: any, container: any) => {\n    if (!oldVnode) {\n      // \u65E7\u8282\u70B9\u4E0D\u5B58\u5728,\u8BF4\u660E\u9700\u8981\u6302\u8F7D\u65B0\u8282\u70B9\n      mountElement(newVnode, container)\n    } else {\n      // \u65E7\u8282\u70B9\u5B58\u5728,\u4E0E\u65B0\u8282\u70B9\u8FDB\u884C\u6BD4\u8F83\n    }\n  }\n  const render = (vnode: any, container: any) => {\n    console.log(vnode, container);\n\n    if (vnode) {\n      // \u65B0\u7684vnode\u5B58\u5728,\u8FDB\u884C\u201C\u6253\u8865\u4E01\u201D\u64CD\u4F5C\n      patch(container._vnode, vnode, container)\n    } else {\n      // \u65B0\u7684vnode\u4E0D\u5B58\u5728,\u82E5\u8001\u7684vnode\u5B58\u5728\u5219\u9700\u8981\u5C06\u8001\u7684vnode\u6302\u8F7D\u7684\u8282\u70B9\u6CE8\u9500\n      if (container._vnode) {\n\n      }\n    }\n    container._vnode = vnode;\n  }\n  return {\n    render\n  }\n}", "export function isObject(target: any) {\n  return typeof target == \"object\" && target !== null\n}\nexport function isString(target: any) {\n  return typeof target == \"string\"\n}\n\nexport function isArray(target: any) {\n  return Array.isArray(target)\n}\nexport { ShapeFlags } from \"./shapeFlags\" ", "import { isArray, isString, ShapeFlags } from \"@vue/shared\";\n\nexport function isVnode(value: any) {\n  return !!(value && value.__v_isVnode)\n}\n\nexport function createVnode(type: string, props: any, children: any = null) {\n  let shapeFlag = isString(type) ? ShapeFlags.ELEMENT : 0;\n  const vnode = {\n    __v_isVnode: true,\n    key: props?.key,\n    type,\n    children,\n    el: null, // \u865A\u62DF\u8282\u70B9\u4E0A\u5BF9\u5E94\u7684\u771F\u5B9Edom,\u540E\u7EEDdiff\u7B97\u6CD5\u4F7F\u7528\n    props,\n    shapeFlag\n  }\n  if (children) {\n    let type = 0;\n    if (isArray(children)) {\n      type = ShapeFlags.ARRAY_CHILDREN\n    } else {\n      children = String(children);\n      type = ShapeFlags.TEXT_CHILDREN\n    }\n    vnode.shapeFlag |= type\n  }\n  return vnode\n}", "/**\n * h\u65B9\u6CD5\u5177\u6709\u591A\u6837\u6027\n * 1\u3001h('div')\n * 2\u3001h('div',{style:xxx})\n * 3\u3001h('div',null,'xxx','xxx')\n * 4\u3001h('div ')\n */\n\nimport { isArray, isObject } from \"@vue/shared\";\nimport { createVnode, isVnode } from \"./vnode\";\n\nexport function h(type: string, propsChildren: any, children: any) {\n  const l = arguments.length;\n  if (l == 2) {\n    // \u53C2\u6570\u957F\u5EA6\u4E3A2\u5177\u6709\u4EE5\u4E0B\u51E0\u79CD\u53EF\u80FD\n    // 1\u3001h(\u2018div\u2019,{style:xxx})\n    // 2\u3001h('div',h('span'))\n    // 3\u3001h('div',[h(' '),h('span')])\n    if (isObject(propsChildren) && !isArray(propsChildren)) {\n      if (isVnode(propsChildren)) {\n        return createVnode(type, null, [propsChildren])\n      }\n      return createVnode(type, propsChildren)\n    } else {\n      return createVnode(type, propsChildren)\n    }\n  }\n  else {\n    if (l > 3) {\n      children = Array.prototype.slice.call(arguments, 2)\n    } else if (l == 3 && isVnode(children)) { // \u7279\u6B8A\u60C5\u51B5 h('div',null,h('span'))\n      children = [children]\n    }\n\n    return createVnode(type, propsChildren, children)\n  }\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACEO,0BAAwB,eAAoB;AACjD,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,QACE;AAOJ,UAAM,eAAe,CAAC,UAAe,cAAmB;AACtD,YAAM,KAAK,kBAAkB,SAAS;AACtC,UAAI,OAAO,SAAS,YAAY,UAAU;AACxC,2BAAmB,SAAS,UAAU,EAAE;AAAA,MAC1C,WAAW,MAAM,QAAQ,SAAS,QAAQ,GAAG;AAAA,MAE7C;AAAC;AACD,UAAI,SAAS,OAAO;AAClB,mBAAW,OAAO,SAAS,OAAO;AAChC,oBAAU,IAAI,MAAM,SAAS,KAAK;AAAA,QACpC;AAAA,MACF;AACA,iBAAW,IAAI,SAAS;AAAA,IAC1B;AAEA,UAAM,QAAQ,CAAC,UAAe,UAAe,cAAmB;AAC9D,UAAI,CAAC,UAAU;AAEb,qBAAa,UAAU,SAAS;AAAA,MAClC,OAAO;AAAA,MAEP;AAAA,IACF;AACA,UAAM,SAAS,CAAC,OAAY,cAAmB;AAC7C,cAAQ,IAAI,OAAO,SAAS;AAE5B,UAAI,OAAO;AAET,cAAM,UAAU,QAAQ,OAAO,SAAS;AAAA,MAC1C,OAAO;AAEL,YAAI,UAAU,QAAQ;AAAA,QAEtB;AAAA,MACF;AACA,gBAAU,SAAS;AAAA,IACrB;AACA,WAAO;AAAA,MACL;AAAA,IACF;AAAA,EACF;;;ACzDO,oBAAkB,QAAa;AACpC,WAAO,OAAO,UAAU,YAAY,WAAW;AAAA,EACjD;AACO,oBAAkB,QAAa;AACpC,WAAO,OAAO,UAAU;AAAA,EAC1B;AAEO,mBAAiB,QAAa;AACnC,WAAO,MAAM,QAAQ,MAAM;AAAA,EAC7B;;;ACPO,mBAAiB,OAAY;AAClC,WAAO,CAAC,CAAE,UAAS,MAAM;AAAA,EAC3B;AAEO,uBAAqB,MAAc,OAAY,WAAgB,MAAM;AAC1E,QAAI,YAAY,SAAS,IAAI,IAAI,kBAAqB;AACtD,UAAM,QAAQ;AAAA,MACZ,aAAa;AAAA,MACb,KAAK,+BAAO;AAAA,MACZ;AAAA,MACA;AAAA,MACA,IAAI;AAAA,MACJ;AAAA,MACA;AAAA,IACF;AACA,QAAI,UAAU;AACZ,UAAI,QAAO;AACX,UAAI,QAAQ,QAAQ,GAAG;AACrB,gBAAO;AAAA,MACT,OAAO;AACL,mBAAW,OAAO,QAAQ;AAC1B,gBAAO;AAAA,MACT;AACA,YAAM,aAAa;AAAA,IACrB;AACA,WAAO;AAAA,EACT;;;ACjBO,aAAW,MAAc,eAAoB,UAAe;AACjE,UAAM,IAAI,UAAU;AACpB,QAAI,KAAK,GAAG;AAKV,UAAI,SAAS,aAAa,KAAK,CAAC,QAAQ,aAAa,GAAG;AACtD,YAAI,QAAQ,aAAa,GAAG;AAC1B,iBAAO,YAAY,MAAM,MAAM,CAAC,aAAa,CAAC;AAAA,QAChD;AACA,eAAO,YAAY,MAAM,aAAa;AAAA,MACxC,OAAO;AACL,eAAO,YAAY,MAAM,aAAa;AAAA,MACxC;AAAA,IACF,OACK;AACH,UAAI,IAAI,GAAG;AACT,mBAAW,MAAM,UAAU,MAAM,KAAK,WAAW,CAAC;AAAA,MACpD,WAAW,KAAK,KAAK,QAAQ,QAAQ,GAAG;AACtC,mBAAW,CAAC,QAAQ;AAAA,MACtB;AAEA,aAAO,YAAY,MAAM,eAAe,QAAQ;AAAA,IAClD;AAAA,EACF;",
  "names": []
}
